paths:
  /generate:
    post:
      summary: Generate prompt using Gemini API
      tags:
        - Prompts
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptInput'
      responses:
        "200":
          description: Gemini prompt response
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                  context:
                    type: string
                  task:
                    type: string
                  output:
                    type: string
                  constraints:
                    type: string
                  language:
                    type: string
                  geminiText:
                    type: string
                    description: Full text generated by Gemini
                  geminiSummary:
                    type: string
                    description: Summary of the generated text
        "400":
          description: Missing prompt in request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Prompt is required"
        "401":
          description: Unauthorized - token not found or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Something went wrong"
  /save:
    post:
      summary: Save a Gemini-generated prompt
      description: Persists a prompt generated by Gemini along with metadata such as score and user ID. Returns the full saved prompt model.
      tags:
        - Prompts
      security:
        - cookieAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  $ref: '#/components/schemas/PromptInput'
      responses:
        "200":
          description: Prompt saved successfully and returned with metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
              example:
                id: "a1b2c3d4-e5f6-7890-abcd-1234567890ef"
                userId: "user-123"
                role: "Developer"
                context: "Build a login feature"
                task: "Write backend logic"
                output: "Express route for authentication"
                constraints: "No third-party auth packages"
                language: "EN"
                score: 5
                geminiText: "This is the full Gemini response."
                geminiSummary: "Short summary of the response"
                createdAt: "2025-04-04T12:00:00Z"
        "400":
          description: Invalid or missing prompt data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Prompt is required"
        "401":
          description: Unauthorized - user not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Something went wrong"

