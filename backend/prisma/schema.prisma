enum Language {
  EN
  ES
  FR
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PromptOutput {
  id        String   @id @default(uuid()) @db.Uuid
  promptId  String   @db.Uuid
  userId    String   @db.Uuid
  content   String   @db.Text
  metadata  Json?    @db.JsonB
  version   Int      @default(1)
  createdAt DateTime @default(now()) @db.Timestamp(0)

  prompt Prompt @relation(fields: [promptId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id])

  @@map("prompt_outputs")
}

model User {
  id          String   @id @default(uuid()) @db.Uuid
  email       String   @unique @db.VarChar(255)
  displayName String   @db.VarChar(32)
  imageUrl    String?  @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.Timestamp(0)

  prompts Prompt[]
  outputs PromptOutput[]

  @@map("users")
}

model Prompt {
  id           String   @id @default(uuid()) @db.Uuid
  userId       String   @db.Uuid
  role         String   @db.VarChar(256)
  context      String   @db.Text
  output       String   @db.Text
  task         String   @db.Text
  constraints  String   @db.Text
  language     Language @default(EN)
  score        Int      @default(0)
  isBookmarked Boolean  @default(false)
  createdAt    DateTime @default(now()) @db.Timestamp(0)

  user    User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  outputs PromptOutput[]

  @@index([userId])
  @@map("prompts")
}
